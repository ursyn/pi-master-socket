dnl Caching is usually WRONG for systems with cross-mounted file systems
dnl (the cache file may correspond to a different system).  Since configure
dnl is not on a performance-critical path, go for robustness over speed.

define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl

# Define package name and version
PACKAGE=_pi
VERSION=0

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl Process this file with autoconf to produce a configure script.
AC_INIT(./Driver_pi.h)

dnl Check for the autoconf version
AC_PREREQ(2.13)
	
dnl Set the header
AC_ARG_PROGRAM

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_MAKE_SET
AC_PATH_PROG(CXX,g++)
AC_PATH_PROG(AUTOCONF,autoconf)

AC_SUBST(CXX)
AC_SUBST(AUTOCONF)

dnl Checks for libraries.
if opsys=`uname -s`
then
        echo "-- Operating system is $opsys"
else
        echo "-- Can't find the 'uname' program!"
        exit 1
fi

case $opsys in
        SunOS*)
                SOCKET_LIB="-lsocket -lnsl" ;;
        *)
                SOCKET_LIB= ;;
esac
AC_SUBST(SOCKET_LIB)

machtype=`uname -m`
case $machtype in
        x86_64)
                echo "On x86_64, forcing mwfile implementation off"
                USE_MWFILE=no
        ;;
esac
AC_SUBST(USE_MWFILE)


dnl Checks for header files.

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.

dnl Check for condor
CONDOR_LIB_DIR=`condor_config_val lib`
CONDOR_DIR=`dirname $CONDOR_LIB_DIR`

AC_ARG_WITH(condor, [  --with-condor           Specify the Condor installation path], CONDOR_DIR=$withval)
if test -z "$CONDOR_DIR"; then
        AC_PATH_PROG(JUNK1, condor_status)
        if test -z "$JUNK1"; then
                echo "-- Can't build MW without Condor, please install Condor first."
                exit 1
        else
                JUNK2=`dirname $JUNK1`
                CONDOR_DIR=`dirname $JUNK2`
                echo "-- Using Condor installed in $CONDOR_DIR"
                AC_SUBST(CONDOR_DIR)
        fi
else 
        echo "-- Using Condor installed in $CONDOR_DIR"
fi

dnl Check for --with-MW
MW_DIR=../../
AC_ARG_WITH(MW, [  --with-MW               Specify the MW installation path], MW_DIR=$withval)
if test -e "$MW_DIR/lib/libMW.a"; then 
	echo "-- Using MW installed in $MW_DIR"
else 
	echo "-- Can't find libMW.a in $MW_DIR/lib"
	exit 1
fi
AC_SUBST(MW_DIR)

dnl Substitute for PVM related 
AC_ARG_WITH(pvm, [  --with-pvm              Use the given pvm installation path], PVM_ROOT=$withval)
AC_ARG_WITH(pvm-arch, [  --with-pvm-arch         Use the given pvm installation path], PVM_ARCH=$withval)
AC_SUBST(PVM_ROOT)
AC_SUBST(PVM_ARCH)

dnl Check for chirp-file support
AC_ARG_WITH(chirp, [  --with-chirp              Use chirp for mw-file on clipped platforms], USE_CHIRP=$withval)

if test -z $USE_CHIRP 
then
echo "-- Not using chirp with MW-File"
else
echo "-- Using chirp with MW-File"
AC_DEFINE(USE_CHIRP)
AC_SUBST(USE_CHIRP)
fi

dnl Check for --with-independent
ENABLE_MWINDEPENDENT=yes
AC_SUBST(ENABLE_MWINDEPENDENT)

dnl Generate output files
AC_OUTPUT(Makefile, echo timestamp > stamp-h)
